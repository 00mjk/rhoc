{
    "variable": {
        "storage_key_name": {
            "default": "hello-storage"
        },
        "chmod_command": {
            "default": ""
        },
        "worker_count": {
            "default": "2"
        },
        "image_name": {
            "default": "zyme-worker-node"
        },
        "storage_name": {
            "default": "zyme-storage"
        },
        "region": {
            "default": "us-east1"
        },
        "zone": {
            "default": "b"
        },
        "storage_instance_type": {
            "default": "f1-micro"
        },
        "storage_disk_size": {
            "default": "50"
        },
        "cluster_name": {
            "default": "sample-cloud-cluster"
        },
        "user_name": {
            "default": "ec2-user"
        },
        "project_name": {
            "default": "zyme-cluster"
        },
        "credential_path": {
            "default": ""
        },
        "root_folder": {
            "default": ""
        },
        "ssh_key_pair_path": {
            "default": "private_keys"
        },


        "cidr_host_start": {
            "default": 10
        },
        "network_ip_range": {
            "default": "10.10.0.0/16"
        },
        "subnet_cidr_range": {
            "default": "10.10.10.0/24"
        }
    },

    "provider": {
        "google": {
            "credentials": "${file(\"${var.credential_path}\")}",
            "project": "${var.project_name}",
            "region": "${var.region}",
            "zone": "${var.region}-${var.zone}",
            "version": "~> 2.5"
        }
    },
    "resource": {
        "google_compute_disk": {
            "storage": {
                "name": "${var.storage_name}-disk",
                "size": "${var.storage_disk_size}",
                "zone": "${var.region}-${var.zone}",
                "lifecycle": {
                    "prevent_destroy": true
                }
            }
        },
        "google_compute_network": {
            "cluster": {
                "routing_mode": "GLOBAL",
                "auto_create_subnetworks": false,
                "name": "${var.cluster_name}"
            },
            "storage": {
                "routing_mode": "GLOBAL",
                "auto_create_subnetworks": false,
                "name": "${var.storage_name}"
            }
        },
        "google_compute_subnetwork": {
            "cluster_subnet": {
                "ip_cidr_range": "${var.subnet_cidr_range}",
                "name": "${google_compute_network.cluster.name}",
                "network": "${google_compute_network.cluster.self_link}"
            },
            "storage_subnet": {
                "ip_cidr_range": "${var.subnet_cidr_range}",
                "name": "${google_compute_network.storage.name}",
                "network": "${google_compute_network.storage.self_link}"
            }
        },
        "google_compute_address": {
            "storage_public": {
                "name": "${var.cluster_name}-storage-public"
            }
        },
        "google_compute_firewall": {
            "allow_incoming_ingress_rule_storage": {
                "name": "${var.cluster_name}-storage-allow-incoming-ingress-rule",
                "description": "Allow all inbound traffic",
                "network": "${google_compute_subnetwork.cluster_subnet.name}",
                "direction": "INGRESS",
                "source_ranges": ["0.0.0.0/0"],
                "allow": {   
                    "protocol": "all"
                },
                "target_tags": ["storage"]
            },
            "egress_rule_storage": {
                "name": "${var.cluster_name}-egress-rule-storage",
                "description": "Allow outbound traffic between storage node and others",
                "network": "${google_compute_subnetwork.cluster_subnet.name}",
                "direction": "EGRESS",
                "destination_ranges": ["${google_compute_subnetwork.cluster_subnet.ip_cidr_range}"],
                "allow": {   
                    "protocol": "all"
                },
                "target_tags": ["login", "workers", "storage"]
            },
            "allow_interconnect_ingress_rule_storage": {
                "name": "${var.cluster_name}-allow-interconnect-ingress-rule-storage",
                "description": "Allow interconnect",
                "network": "${google_compute_subnetwork.cluster_subnet.name}",
                "direction": "INGRESS",
                "source_ranges": ["${google_compute_subnetwork.cluster_subnet.ip_cidr_range}"],
                "allow": {   
                    "protocol": "all"
                },
                "target_tags": ["workers", "storage"]
            }
        },
        "google_compute_instance": {
            "storage": {
                "name": "${var.cluster_name}-storage-node",
                "machine_type": "${var.storage_instance_type}",
                "zone": "${var.region}-${var.zone}",
                "can_ip_forward": true,
                "tags": ["storage"],
                "boot_disk": {
                    "initialize_params": {
                        "image": "${data.google_compute_image.centos_image.self_link}"
                    }
                },
                "attached_disk": {
                    "source": "${google_compute_disk.storage.self_link}",
                    "device_name": "storage_disk"
                },
                "network_interface": {
                    "subnetwork": "${google_compute_subnetwork.cluster_subnet.name}",
                    "network_ip": "${cidrhost(google_compute_subnetwork.cluster_subnet.ip_cidr_range, var.cidr_host_start + 1 + var.worker_count + 1)}",
                    "access_config": {
                        "nat_ip": "${google_compute_address.storage_public.address}"
                    }
                },
                "metadata": {
                  "sshKeys": "${var.user_name}:${module.ssh_manager.public_key}"
                },
                "connection": {
                    "type": "ssh",
                    "user": "${var.user_name}",
                    "host": "${self.network_interface.0.access_config.0.nat_ip}",
                    "private_key": "${file(\"${var.root_folder}/${var.ssh_key_pair_path}/${module.ssh_manager.key_name}.pem\")}"
                },
                "provisioner": [
                    {
                        "file": {
                            "source": "${var.root_folder}/postprocess/storage/init-disk.sh",
                            "destination": "~/Rhoc-init-disk.sh"
                        }
                    },
                    {
                        "remote-exec": {
                            "inline": [
                                "chmod +x ~/Rhoc-init-disk.sh",
                                "dos2unix ~/Rhoc-init-disk.sh",
                                "~/Rhoc-init-disk.sh \"${var.network_ip_range}\""
                            ]
                        }
                    }
                ]
            }
        }
    },
    "module": {
        "ssh_manager": {
            "chmod_command": "${var.chmod_command}",
            "name": "${var.storage_key_name}",
            "namespace": "",
            "private_key_extension": ".pem",
            "public_key_extension": ".pub",
            "source": "git::https://github.com/cloudposse/terraform-tls-ssh-key-pair.git?ref=tags/0.2.0",
            "ssh_public_key_path": "${var.root_folder}/${var.ssh_key_pair_path}",
            "stage": ""
        }
    },
    "data": {
        "google_compute_image": {
            "centos_image": {
                "name": "${var.image_name}",
                "project": "${var.project_name}"
            }
        }
    },
    "output": {
        "internal_address": {
            "value": "${google_compute_instance.storage.network_interface.0.network_ip}"
        },
        "external_address": {
            "value": "${google_compute_instance.storage.network_interface.0.access_config.0.nat_ip}"
        },
        "user_name": {
            "value": "${var.user_name}"
        },
        "pkey_file": {
            "value": "${var.ssh_key_pair_path}/${module.ssh_manager.key_name}.pem"
        }
    }
}
